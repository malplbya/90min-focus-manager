name: Docker Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read
  security-events: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Test HTML validation
      run: |
        npm install -g html-validate
        html-validate index.html || true
    
    - name: Test basic functionality
      run: |
        python -m http.server 8080 &
        sleep 2
        curl -f http://localhost:8080 || exit 1
        pkill -f "python -m http.server"
  docker-build:
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Verify Dockerfile exists
      run: |
        ls -la
        echo "Checking Dockerfile..."
        cat Dockerfile | head -10
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        load: true
        tags: focus-manager:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: List Docker images
      run: |
        echo "Listing all Docker images..."
        docker images
        echo "Checking specific image..."
        docker images focus-manager:latest
    
    - name: Test Docker container
      run: |
        set -e
        echo "Starting Docker container..."
        docker run -d -p 8080:80 --name test-container focus-manager:latest
        echo "Waiting for container to start..."
        sleep 10
        echo "Testing container accessibility..."
        curl -f http://localhost:8080 || exit 1
        echo "Stopping and removing container..."
        docker stop test-container
        docker rm test-container
  security-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'
